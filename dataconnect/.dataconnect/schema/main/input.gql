"""
✨ `Favorite_KeyOutput` returns the primary key fields of table type `Favorite`.

It has the same format as `Favorite_Key`, but is only used as mutation return value.
"""
scalar Favorite_KeyOutput
"""
✨ `Location_KeyOutput` returns the primary key fields of table type `Location`.

It has the same format as `Location_Key`, but is only used as mutation return value.
"""
scalar Location_KeyOutput
"""
✨ `Rating_KeyOutput` returns the primary key fields of table type `Rating`.

It has the same format as `Rating_Key`, but is only used as mutation return value.
"""
scalar Rating_KeyOutput
"""
✨ `Report_KeyOutput` returns the primary key fields of table type `Report`.

It has the same format as `Report_Key`, but is only used as mutation return value.
"""
scalar Report_KeyOutput
"""
✨ `User_KeyOutput` returns the primary key fields of table type `User`.

It has the same format as `User_Key`, but is only used as mutation return value.
"""
scalar User_KeyOutput
"""
✨ Generated data input type for table 'Favorite'. It includes all necessary fields for creating or upserting rows into table.
"""
input Favorite_Data {
  """
  ✨ Generated from Field `Favorite`.`id` of type `UUID!`
  """
  id: UUID
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `Favorite`.`id` of type `UUID!`)
  """
  id_expr: UUID_Expr
  """
  ✨ Generated from Field `Favorite`.`locationId` of type `UUID!`
  """
  locationId: UUID
  """
  ✨ `_expr` server value variant of `locationId` (✨ Generated from Field `Favorite`.`locationId` of type `UUID!`)
  """
  locationId_expr: UUID_Expr
  """
  ✨ Generated from Field `Favorite`.`userUid` of type `String!`
  """
  userUid: String
  """
  ✨ `_expr` server value variant of `userUid` (✨ Generated from Field `Favorite`.`userUid` of type `String!`)
  """
  userUid_expr: String_Expr
  """
  ✨ Generated from Field `Favorite`.`location` of type `Location!`
  """
  location: Location_Key
  """
  ✨ Generated from Field `Favorite`.`user` of type `User!`
  """
  user: User_Key
  """
  ✨ Generated from Field `Favorite`.`createdAt` of type `Timestamp!`
  """
  createdAt: Timestamp
  """
  ✨ `_expr` server value variant of `createdAt` (✨ Generated from Field `Favorite`.`createdAt` of type `Timestamp!`)
  """
  createdAt_expr: Timestamp_Expr
  """
  ✨ `_time` server value variant of `createdAt` (✨ Generated from Field `Favorite`.`createdAt` of type `Timestamp!`)
  """
  createdAt_time: Timestamp_Relative
  """
  ✨ `_update` server value variant of `createdAt` (✨ Generated from Field `Favorite`.`createdAt` of type `Timestamp!`)
  """
  createdAt_update: [Timestamp_Update!]
}
"""
✨ Generated filter input type for table 'Favorite'. This input allows filtering objects using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input Favorite_Filter {
  """
  Apply multiple filter conditions using `AND` logic.
  """
  _and: [Favorite_Filter!]
  """
  Negate the result of the provided filter condition.
  """
  _not: Favorite_Filter
  """
  Apply multiple filter conditions using `OR` logic.
  """
  _or: [Favorite_Filter!]
  """
  ✨ Generated from Field `Favorite`.`id` of type `UUID!`
  """
  id: UUID_Filter
  """
  ✨ Generated from Field `Favorite`.`locationId` of type `UUID!`
  """
  locationId: UUID_Filter
  """
  ✨ Generated from Field `Favorite`.`userUid` of type `String!`
  """
  userUid: String_Filter
  """
  ✨ Generated from Field `Favorite`.`location` of type `Location!`
  """
  location: Location_Filter
  """
  ✨ Generated from Field `Favorite`.`user` of type `User!`
  """
  user: User_Filter
  """
  ✨ Generated from Field `Favorite`.`createdAt` of type `Timestamp!`
  """
  createdAt: Timestamp_Filter
}
"""
✨ Generated first-row input type for table 'Favorite'. This input selects the first row matching the filter criteria, ordered according to the specified conditions.
"""
input Favorite_FirstRow {
  """
  Order the result by the specified fields.
  """
  orderBy: [Favorite_Order!]
  """
  Filters rows based on the specified conditions.
  """
  where: Favorite_Filter
}
"""
✨ Generated having input type for table 'Favorite'. This input allows you to filter groups during aggregate queries using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input Favorite_Having {
  """
  Apply multiple Having conditions using `AND` logic.
  """
  _and: [Favorite_Having!]
  """
  Whether to apply DISTINCT to the aggregate function.
  """
  _distinct: Boolean
  """
  Negate the result of the provided Having condition.
  """
  _not: Favorite_Having
  """
  Apply multiple Having conditions using `OR` logic.
  """
  _or: [Favorite_Having!]
  """
  ✨ Generated from Field `Favorite`.`_count` of type `Int!`
  """
  _count: Int_Filter
  """
  ✨ Generated from Field `Favorite`.`createdAt_count` of type `Int!`
  """
  createdAt_count: Int_Filter
  """
  ✨ Generated from Field `Favorite`.`id_count` of type `Int!`
  """
  id_count: Int_Filter
  """
  ✨ Generated from Field `Favorite`.`locationId_count` of type `Int!`
  """
  locationId_count: Int_Filter
  """
  ✨ Generated from Field `Favorite`.`userUid_count` of type `Int!`
  """
  userUid_count: Int_Filter
  """
  ✨ Generated from Field `Favorite`.`createdAt_min` of type `Timestamp`
  """
  createdAt_min: Timestamp_Filter
  """
  ✨ Generated from Field `Favorite`.`createdAt_max` of type `Timestamp`
  """
  createdAt_max: Timestamp_Filter
}
"""
✨ Generated key input type for table 'Favorite'. It represents the primary key fields used to uniquely identify a row in the table.
"""
input Favorite_Key {
  """
  ✨ Generated from Field `Favorite`.`id` of type `UUID!`
  """
  id: UUID
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `Favorite`.`id` of type `UUID!`)
  """
  id_expr: UUID_Expr
}
"""
✨ Generated list filter input type for table 'Favorite'. This input applies filtering logic based on the count or existence of related objects that matches certain criteria.
"""
input Favorite_ListFilter {
  """
  The desired number of objects that match the condition (defaults to at least one).
  """
  count: Int_Filter = {gt:0}
  """
  Condition of the related objects to filter for.
  """
  exist: Favorite_Filter
}
"""
✨ Generated order input type for table 'Favorite'. This input defines the sorting order of rows in query results based on one or more fields.
"""
input Favorite_Order {
  """
  ✨ Generated from Field `Favorite`.`id` of type `UUID!`
  """
  id: OrderDirection
  """
  ✨ Generated from Field `Favorite`.`locationId` of type `UUID!`
  """
  locationId: OrderDirection
  """
  ✨ Generated from Field `Favorite`.`userUid` of type `String!`
  """
  userUid: OrderDirection
  """
  ✨ Generated from Field `Favorite`.`location` of type `Location!`
  """
  location: Location_Order
  """
  ✨ Generated from Field `Favorite`.`user` of type `User!`
  """
  user: User_Order
  """
  ✨ Generated from Field `Favorite`.`createdAt` of type `Timestamp!`
  """
  createdAt: OrderDirection
}
"""
✨ Generated data input type for table 'Location'. It includes all necessary fields for creating or upserting rows into table.
"""
input Location_Data {
  """
  ✨ Generated from Field `Location`.`id` of type `UUID!`
  """
  id: UUID
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `Location`.`id` of type `UUID!`)
  """
  id_expr: UUID_Expr
  """
  ✨ Generated from Field `Location`.`creatorUid` of type `String!`
  """
  creatorUid: String
  """
  ✨ `_expr` server value variant of `creatorUid` (✨ Generated from Field `Location`.`creatorUid` of type `String!`)
  """
  creatorUid_expr: String_Expr
  """
  ✨ Generated from Field `Location`.`creator` of type `User!`
  """
  creator: User_Key
  """
  ✨ Generated from Field `Location`.`accessInfo` of type `String`
  """
  accessInfo: String
  """
  ✨ `_expr` server value variant of `accessInfo` (✨ Generated from Field `Location`.`accessInfo` of type `String`)
  """
  accessInfo_expr: String_Expr
  """
  ✨ Generated from Field `Location`.`activityType` of type `String!`
  """
  activityType: String
  """
  ✨ `_expr` server value variant of `activityType` (✨ Generated from Field `Location`.`activityType` of type `String!`)
  """
  activityType_expr: String_Expr
  """
  ✨ Generated from Field `Location`.`createdAt` of type `Timestamp!`
  """
  createdAt: Timestamp
  """
  ✨ `_expr` server value variant of `createdAt` (✨ Generated from Field `Location`.`createdAt` of type `Timestamp!`)
  """
  createdAt_expr: Timestamp_Expr
  """
  ✨ `_time` server value variant of `createdAt` (✨ Generated from Field `Location`.`createdAt` of type `Timestamp!`)
  """
  createdAt_time: Timestamp_Relative
  """
  ✨ `_update` server value variant of `createdAt` (✨ Generated from Field `Location`.`createdAt` of type `Timestamp!`)
  """
  createdAt_update: [Timestamp_Update!]
  """
  ✨ Generated from Field `Location`.`description` of type `String`
  """
  description: String
  """
  ✨ `_expr` server value variant of `description` (✨ Generated from Field `Location`.`description` of type `String`)
  """
  description_expr: String_Expr
  """
  ✨ Generated from Field `Location`.`difficulty` of type `Int`
  """
  difficulty: Int
  """
  ✨ `_expr` server value variant of `difficulty` (✨ Generated from Field `Location`.`difficulty` of type `Int`)
  """
  difficulty_expr: Int_Expr
  """
  ✨ `_update` server value variant of `difficulty` (✨ Generated from Field `Location`.`difficulty` of type `Int`)
  """
  difficulty_update: [Int_Update!]
  """
  ✨ Generated from Field `Location`.`hazards` of type `String`
  """
  hazards: String
  """
  ✨ `_expr` server value variant of `hazards` (✨ Generated from Field `Location`.`hazards` of type `String`)
  """
  hazards_expr: String_Expr
  """
  ✨ Generated from Field `Location`.`imageUrls` of type `[String]`
  """
  imageUrls: [String!]
  """
  ✨ `_update` server value variant of `imageUrls` (✨ Generated from Field `Location`.`imageUrls` of type `[String]`)
  """
  imageUrls_update: [String_ListUpdate!]
  """
  ✨ Generated from Field `Location`.`latitude` of type `Float!`
  """
  latitude: Float
  """
  ✨ `_expr` server value variant of `latitude` (✨ Generated from Field `Location`.`latitude` of type `Float!`)
  """
  latitude_expr: Float_Expr
  """
  ✨ `_update` server value variant of `latitude` (✨ Generated from Field `Location`.`latitude` of type `Float!`)
  """
  latitude_update: [Float_Update!]
  """
  ✨ Generated from Field `Location`.`longitude` of type `Float!`
  """
  longitude: Float
  """
  ✨ `_expr` server value variant of `longitude` (✨ Generated from Field `Location`.`longitude` of type `Float!`)
  """
  longitude_expr: Float_Expr
  """
  ✨ `_update` server value variant of `longitude` (✨ Generated from Field `Location`.`longitude` of type `Float!`)
  """
  longitude_update: [Float_Update!]
  """
  ✨ Generated from Field `Location`.`name` of type `String!`
  """
  name: String
  """
  ✨ `_expr` server value variant of `name` (✨ Generated from Field `Location`.`name` of type `String!`)
  """
  name_expr: String_Expr
}
"""
✨ Generated filter input type for table 'Location'. This input allows filtering objects using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input Location_Filter {
  """
  Apply multiple filter conditions using `AND` logic.
  """
  _and: [Location_Filter!]
  """
  Negate the result of the provided filter condition.
  """
  _not: Location_Filter
  """
  Apply multiple filter conditions using `OR` logic.
  """
  _or: [Location_Filter!]
  """
  ✨ Generated from Field `Location`.`id` of type `UUID!`
  """
  id: UUID_Filter
  """
  ✨ Generated from Field `Location`.`creatorUid` of type `String!`
  """
  creatorUid: String_Filter
  """
  ✨ Generated from Field `Location`.`creator` of type `User!`
  """
  creator: User_Filter
  """
  ✨ Generated from Field `Location`.`accessInfo` of type `String`
  """
  accessInfo: String_Filter
  """
  ✨ Generated from Field `Location`.`activityType` of type `String!`
  """
  activityType: String_Filter
  """
  ✨ Generated from Field `Location`.`createdAt` of type `Timestamp!`
  """
  createdAt: Timestamp_Filter
  """
  ✨ Generated from Field `Location`.`description` of type `String`
  """
  description: String_Filter
  """
  ✨ Generated from Field `Location`.`difficulty` of type `Int`
  """
  difficulty: Int_Filter
  """
  ✨ Generated from Field `Location`.`hazards` of type `String`
  """
  hazards: String_Filter
  """
  ✨ Generated from Field `Location`.`imageUrls` of type `[String]`
  """
  imageUrls: String_ListFilter
  """
  ✨ Generated from Field `Location`.`latitude` of type `Float!`
  """
  latitude: Float_Filter
  """
  ✨ Generated from Field `Location`.`longitude` of type `Float!`
  """
  longitude: Float_Filter
  """
  ✨ Generated from Field `Location`.`name` of type `String!`
  """
  name: String_Filter
  """
  ✨ Generated from Field `Location`.`favorites_on_location` of type `[Favorite!]!`
  """
  favorites_on_location: Favorite_ListFilter
  """
  ✨ Generated from Field `Location`.`ratings_on_location` of type `[Rating!]!`
  """
  ratings_on_location: Rating_ListFilter
  """
  ✨ Generated from Field `Location`.`reports_on_location` of type `[Report!]!`
  """
  reports_on_location: Report_ListFilter
}
"""
✨ Generated first-row input type for table 'Location'. This input selects the first row matching the filter criteria, ordered according to the specified conditions.
"""
input Location_FirstRow {
  """
  Order the result by the specified fields.
  """
  orderBy: [Location_Order!]
  """
  Filters rows based on the specified conditions.
  """
  where: Location_Filter
}
"""
✨ Generated having input type for table 'Location'. This input allows you to filter groups during aggregate queries using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input Location_Having {
  """
  Apply multiple Having conditions using `AND` logic.
  """
  _and: [Location_Having!]
  """
  Whether to apply DISTINCT to the aggregate function.
  """
  _distinct: Boolean
  """
  Negate the result of the provided Having condition.
  """
  _not: Location_Having
  """
  Apply multiple Having conditions using `OR` logic.
  """
  _or: [Location_Having!]
  """
  ✨ Generated from Field `Location`.`_count` of type `Int!`
  """
  _count: Int_Filter
  """
  ✨ Generated from Field `Location`.`accessInfo_count` of type `Int!`
  """
  accessInfo_count: Int_Filter
  """
  ✨ Generated from Field `Location`.`activityType_count` of type `Int!`
  """
  activityType_count: Int_Filter
  """
  ✨ Generated from Field `Location`.`createdAt_count` of type `Int!`
  """
  createdAt_count: Int_Filter
  """
  ✨ Generated from Field `Location`.`creatorUid_count` of type `Int!`
  """
  creatorUid_count: Int_Filter
  """
  ✨ Generated from Field `Location`.`description_count` of type `Int!`
  """
  description_count: Int_Filter
  """
  ✨ Generated from Field `Location`.`difficulty_count` of type `Int!`
  """
  difficulty_count: Int_Filter
  """
  ✨ Generated from Field `Location`.`hazards_count` of type `Int!`
  """
  hazards_count: Int_Filter
  """
  ✨ Generated from Field `Location`.`id_count` of type `Int!`
  """
  id_count: Int_Filter
  """
  ✨ Generated from Field `Location`.`latitude_count` of type `Int!`
  """
  latitude_count: Int_Filter
  """
  ✨ Generated from Field `Location`.`longitude_count` of type `Int!`
  """
  longitude_count: Int_Filter
  """
  ✨ Generated from Field `Location`.`name_count` of type `Int!`
  """
  name_count: Int_Filter
  """
  ✨ Generated from Field `Location`.`difficulty_sum` of type `Int`
  """
  difficulty_sum: Int_Filter
  """
  ✨ Generated from Field `Location`.`latitude_sum` of type `Float`
  """
  latitude_sum: Float_Filter
  """
  ✨ Generated from Field `Location`.`longitude_sum` of type `Float`
  """
  longitude_sum: Float_Filter
  """
  ✨ Generated from Field `Location`.`difficulty_avg` of type `Float`
  """
  difficulty_avg: Float_Filter
  """
  ✨ Generated from Field `Location`.`latitude_avg` of type `Float`
  """
  latitude_avg: Float_Filter
  """
  ✨ Generated from Field `Location`.`longitude_avg` of type `Float`
  """
  longitude_avg: Float_Filter
  """
  ✨ Generated from Field `Location`.`createdAt_min` of type `Timestamp`
  """
  createdAt_min: Timestamp_Filter
  """
  ✨ Generated from Field `Location`.`difficulty_min` of type `Int`
  """
  difficulty_min: Int_Filter
  """
  ✨ Generated from Field `Location`.`latitude_min` of type `Float`
  """
  latitude_min: Float_Filter
  """
  ✨ Generated from Field `Location`.`longitude_min` of type `Float`
  """
  longitude_min: Float_Filter
  """
  ✨ Generated from Field `Location`.`createdAt_max` of type `Timestamp`
  """
  createdAt_max: Timestamp_Filter
  """
  ✨ Generated from Field `Location`.`difficulty_max` of type `Int`
  """
  difficulty_max: Int_Filter
  """
  ✨ Generated from Field `Location`.`latitude_max` of type `Float`
  """
  latitude_max: Float_Filter
  """
  ✨ Generated from Field `Location`.`longitude_max` of type `Float`
  """
  longitude_max: Float_Filter
}
"""
✨ Generated key input type for table 'Location'. It represents the primary key fields used to uniquely identify a row in the table.
"""
input Location_Key {
  """
  ✨ Generated from Field `Location`.`id` of type `UUID!`
  """
  id: UUID
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `Location`.`id` of type `UUID!`)
  """
  id_expr: UUID_Expr
}
"""
✨ Generated list filter input type for table 'Location'. This input applies filtering logic based on the count or existence of related objects that matches certain criteria.
"""
input Location_ListFilter {
  """
  The desired number of objects that match the condition (defaults to at least one).
  """
  count: Int_Filter = {gt:0}
  """
  Condition of the related objects to filter for.
  """
  exist: Location_Filter
}
"""
✨ Generated order input type for table 'Location'. This input defines the sorting order of rows in query results based on one or more fields.
"""
input Location_Order {
  """
  ✨ Generated from Field `Location`.`id` of type `UUID!`
  """
  id: OrderDirection
  """
  ✨ Generated from Field `Location`.`creatorUid` of type `String!`
  """
  creatorUid: OrderDirection
  """
  ✨ Generated from Field `Location`.`creator` of type `User!`
  """
  creator: User_Order
  """
  ✨ Generated from Field `Location`.`accessInfo` of type `String`
  """
  accessInfo: OrderDirection
  """
  ✨ Generated from Field `Location`.`activityType` of type `String!`
  """
  activityType: OrderDirection
  """
  ✨ Generated from Field `Location`.`createdAt` of type `Timestamp!`
  """
  createdAt: OrderDirection
  """
  ✨ Generated from Field `Location`.`description` of type `String`
  """
  description: OrderDirection
  """
  ✨ Generated from Field `Location`.`difficulty` of type `Int`
  """
  difficulty: OrderDirection
  """
  ✨ Generated from Field `Location`.`hazards` of type `String`
  """
  hazards: OrderDirection
  """
  ✨ Generated from Field `Location`.`latitude` of type `Float!`
  """
  latitude: OrderDirection
  """
  ✨ Generated from Field `Location`.`longitude` of type `Float!`
  """
  longitude: OrderDirection
  """
  ✨ Generated from Field `Location`.`name` of type `String!`
  """
  name: OrderDirection
}
"""
✨ Generated data input type for table 'Rating'. It includes all necessary fields for creating or upserting rows into table.
"""
input Rating_Data {
  """
  ✨ Generated from Field `Rating`.`id` of type `UUID!`
  """
  id: UUID
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `Rating`.`id` of type `UUID!`)
  """
  id_expr: UUID_Expr
  """
  ✨ Generated from Field `Rating`.`locationId` of type `UUID!`
  """
  locationId: UUID
  """
  ✨ `_expr` server value variant of `locationId` (✨ Generated from Field `Rating`.`locationId` of type `UUID!`)
  """
  locationId_expr: UUID_Expr
  """
  ✨ Generated from Field `Rating`.`userUid` of type `String!`
  """
  userUid: String
  """
  ✨ `_expr` server value variant of `userUid` (✨ Generated from Field `Rating`.`userUid` of type `String!`)
  """
  userUid_expr: String_Expr
  """
  ✨ Generated from Field `Rating`.`location` of type `Location!`
  """
  location: Location_Key
  """
  ✨ Generated from Field `Rating`.`user` of type `User!`
  """
  user: User_Key
  """
  ✨ Generated from Field `Rating`.`comment` of type `String`
  """
  comment: String
  """
  ✨ `_expr` server value variant of `comment` (✨ Generated from Field `Rating`.`comment` of type `String`)
  """
  comment_expr: String_Expr
  """
  ✨ Generated from Field `Rating`.`createdAt` of type `Timestamp!`
  """
  createdAt: Timestamp
  """
  ✨ `_expr` server value variant of `createdAt` (✨ Generated from Field `Rating`.`createdAt` of type `Timestamp!`)
  """
  createdAt_expr: Timestamp_Expr
  """
  ✨ `_time` server value variant of `createdAt` (✨ Generated from Field `Rating`.`createdAt` of type `Timestamp!`)
  """
  createdAt_time: Timestamp_Relative
  """
  ✨ `_update` server value variant of `createdAt` (✨ Generated from Field `Rating`.`createdAt` of type `Timestamp!`)
  """
  createdAt_update: [Timestamp_Update!]
  """
  ✨ Generated from Field `Rating`.`rating` of type `Int!`
  """
  rating: Int
  """
  ✨ `_expr` server value variant of `rating` (✨ Generated from Field `Rating`.`rating` of type `Int!`)
  """
  rating_expr: Int_Expr
  """
  ✨ `_update` server value variant of `rating` (✨ Generated from Field `Rating`.`rating` of type `Int!`)
  """
  rating_update: [Int_Update!]
}
"""
✨ Generated filter input type for table 'Rating'. This input allows filtering objects using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input Rating_Filter {
  """
  Apply multiple filter conditions using `AND` logic.
  """
  _and: [Rating_Filter!]
  """
  Negate the result of the provided filter condition.
  """
  _not: Rating_Filter
  """
  Apply multiple filter conditions using `OR` logic.
  """
  _or: [Rating_Filter!]
  """
  ✨ Generated from Field `Rating`.`id` of type `UUID!`
  """
  id: UUID_Filter
  """
  ✨ Generated from Field `Rating`.`locationId` of type `UUID!`
  """
  locationId: UUID_Filter
  """
  ✨ Generated from Field `Rating`.`userUid` of type `String!`
  """
  userUid: String_Filter
  """
  ✨ Generated from Field `Rating`.`location` of type `Location!`
  """
  location: Location_Filter
  """
  ✨ Generated from Field `Rating`.`user` of type `User!`
  """
  user: User_Filter
  """
  ✨ Generated from Field `Rating`.`comment` of type `String`
  """
  comment: String_Filter
  """
  ✨ Generated from Field `Rating`.`createdAt` of type `Timestamp!`
  """
  createdAt: Timestamp_Filter
  """
  ✨ Generated from Field `Rating`.`rating` of type `Int!`
  """
  rating: Int_Filter
}
"""
✨ Generated first-row input type for table 'Rating'. This input selects the first row matching the filter criteria, ordered according to the specified conditions.
"""
input Rating_FirstRow {
  """
  Order the result by the specified fields.
  """
  orderBy: [Rating_Order!]
  """
  Filters rows based on the specified conditions.
  """
  where: Rating_Filter
}
"""
✨ Generated having input type for table 'Rating'. This input allows you to filter groups during aggregate queries using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input Rating_Having {
  """
  Apply multiple Having conditions using `AND` logic.
  """
  _and: [Rating_Having!]
  """
  Whether to apply DISTINCT to the aggregate function.
  """
  _distinct: Boolean
  """
  Negate the result of the provided Having condition.
  """
  _not: Rating_Having
  """
  Apply multiple Having conditions using `OR` logic.
  """
  _or: [Rating_Having!]
  """
  ✨ Generated from Field `Rating`.`_count` of type `Int!`
  """
  _count: Int_Filter
  """
  ✨ Generated from Field `Rating`.`comment_count` of type `Int!`
  """
  comment_count: Int_Filter
  """
  ✨ Generated from Field `Rating`.`createdAt_count` of type `Int!`
  """
  createdAt_count: Int_Filter
  """
  ✨ Generated from Field `Rating`.`id_count` of type `Int!`
  """
  id_count: Int_Filter
  """
  ✨ Generated from Field `Rating`.`locationId_count` of type `Int!`
  """
  locationId_count: Int_Filter
  """
  ✨ Generated from Field `Rating`.`rating_count` of type `Int!`
  """
  rating_count: Int_Filter
  """
  ✨ Generated from Field `Rating`.`userUid_count` of type `Int!`
  """
  userUid_count: Int_Filter
  """
  ✨ Generated from Field `Rating`.`rating_sum` of type `Int`
  """
  rating_sum: Int_Filter
  """
  ✨ Generated from Field `Rating`.`rating_avg` of type `Float`
  """
  rating_avg: Float_Filter
  """
  ✨ Generated from Field `Rating`.`createdAt_min` of type `Timestamp`
  """
  createdAt_min: Timestamp_Filter
  """
  ✨ Generated from Field `Rating`.`rating_min` of type `Int`
  """
  rating_min: Int_Filter
  """
  ✨ Generated from Field `Rating`.`createdAt_max` of type `Timestamp`
  """
  createdAt_max: Timestamp_Filter
  """
  ✨ Generated from Field `Rating`.`rating_max` of type `Int`
  """
  rating_max: Int_Filter
}
"""
✨ Generated key input type for table 'Rating'. It represents the primary key fields used to uniquely identify a row in the table.
"""
input Rating_Key {
  """
  ✨ Generated from Field `Rating`.`id` of type `UUID!`
  """
  id: UUID
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `Rating`.`id` of type `UUID!`)
  """
  id_expr: UUID_Expr
}
"""
✨ Generated list filter input type for table 'Rating'. This input applies filtering logic based on the count or existence of related objects that matches certain criteria.
"""
input Rating_ListFilter {
  """
  The desired number of objects that match the condition (defaults to at least one).
  """
  count: Int_Filter = {gt:0}
  """
  Condition of the related objects to filter for.
  """
  exist: Rating_Filter
}
"""
✨ Generated order input type for table 'Rating'. This input defines the sorting order of rows in query results based on one or more fields.
"""
input Rating_Order {
  """
  ✨ Generated from Field `Rating`.`id` of type `UUID!`
  """
  id: OrderDirection
  """
  ✨ Generated from Field `Rating`.`locationId` of type `UUID!`
  """
  locationId: OrderDirection
  """
  ✨ Generated from Field `Rating`.`userUid` of type `String!`
  """
  userUid: OrderDirection
  """
  ✨ Generated from Field `Rating`.`location` of type `Location!`
  """
  location: Location_Order
  """
  ✨ Generated from Field `Rating`.`user` of type `User!`
  """
  user: User_Order
  """
  ✨ Generated from Field `Rating`.`comment` of type `String`
  """
  comment: OrderDirection
  """
  ✨ Generated from Field `Rating`.`createdAt` of type `Timestamp!`
  """
  createdAt: OrderDirection
  """
  ✨ Generated from Field `Rating`.`rating` of type `Int!`
  """
  rating: OrderDirection
}
"""
✨ Generated data input type for table 'Report'. It includes all necessary fields for creating or upserting rows into table.
"""
input Report_Data {
  """
  ✨ Generated from Field `Report`.`id` of type `UUID!`
  """
  id: UUID
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `Report`.`id` of type `UUID!`)
  """
  id_expr: UUID_Expr
  """
  ✨ Generated from Field `Report`.`locationId` of type `UUID!`
  """
  locationId: UUID
  """
  ✨ `_expr` server value variant of `locationId` (✨ Generated from Field `Report`.`locationId` of type `UUID!`)
  """
  locationId_expr: UUID_Expr
  """
  ✨ Generated from Field `Report`.`userUid` of type `String!`
  """
  userUid: String
  """
  ✨ `_expr` server value variant of `userUid` (✨ Generated from Field `Report`.`userUid` of type `String!`)
  """
  userUid_expr: String_Expr
  """
  ✨ Generated from Field `Report`.`location` of type `Location!`
  """
  location: Location_Key
  """
  ✨ Generated from Field `Report`.`user` of type `User!`
  """
  user: User_Key
  """
  ✨ Generated from Field `Report`.`createdAt` of type `Timestamp!`
  """
  createdAt: Timestamp
  """
  ✨ `_expr` server value variant of `createdAt` (✨ Generated from Field `Report`.`createdAt` of type `Timestamp!`)
  """
  createdAt_expr: Timestamp_Expr
  """
  ✨ `_time` server value variant of `createdAt` (✨ Generated from Field `Report`.`createdAt` of type `Timestamp!`)
  """
  createdAt_time: Timestamp_Relative
  """
  ✨ `_update` server value variant of `createdAt` (✨ Generated from Field `Report`.`createdAt` of type `Timestamp!`)
  """
  createdAt_update: [Timestamp_Update!]
  """
  ✨ Generated from Field `Report`.`reason` of type `String!`
  """
  reason: String
  """
  ✨ `_expr` server value variant of `reason` (✨ Generated from Field `Report`.`reason` of type `String!`)
  """
  reason_expr: String_Expr
}
"""
✨ Generated filter input type for table 'Report'. This input allows filtering objects using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input Report_Filter {
  """
  Apply multiple filter conditions using `AND` logic.
  """
  _and: [Report_Filter!]
  """
  Negate the result of the provided filter condition.
  """
  _not: Report_Filter
  """
  Apply multiple filter conditions using `OR` logic.
  """
  _or: [Report_Filter!]
  """
  ✨ Generated from Field `Report`.`id` of type `UUID!`
  """
  id: UUID_Filter
  """
  ✨ Generated from Field `Report`.`locationId` of type `UUID!`
  """
  locationId: UUID_Filter
  """
  ✨ Generated from Field `Report`.`userUid` of type `String!`
  """
  userUid: String_Filter
  """
  ✨ Generated from Field `Report`.`location` of type `Location!`
  """
  location: Location_Filter
  """
  ✨ Generated from Field `Report`.`user` of type `User!`
  """
  user: User_Filter
  """
  ✨ Generated from Field `Report`.`createdAt` of type `Timestamp!`
  """
  createdAt: Timestamp_Filter
  """
  ✨ Generated from Field `Report`.`reason` of type `String!`
  """
  reason: String_Filter
}
"""
✨ Generated first-row input type for table 'Report'. This input selects the first row matching the filter criteria, ordered according to the specified conditions.
"""
input Report_FirstRow {
  """
  Order the result by the specified fields.
  """
  orderBy: [Report_Order!]
  """
  Filters rows based on the specified conditions.
  """
  where: Report_Filter
}
"""
✨ Generated having input type for table 'Report'. This input allows you to filter groups during aggregate queries using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input Report_Having {
  """
  Apply multiple Having conditions using `AND` logic.
  """
  _and: [Report_Having!]
  """
  Whether to apply DISTINCT to the aggregate function.
  """
  _distinct: Boolean
  """
  Negate the result of the provided Having condition.
  """
  _not: Report_Having
  """
  Apply multiple Having conditions using `OR` logic.
  """
  _or: [Report_Having!]
  """
  ✨ Generated from Field `Report`.`_count` of type `Int!`
  """
  _count: Int_Filter
  """
  ✨ Generated from Field `Report`.`createdAt_count` of type `Int!`
  """
  createdAt_count: Int_Filter
  """
  ✨ Generated from Field `Report`.`id_count` of type `Int!`
  """
  id_count: Int_Filter
  """
  ✨ Generated from Field `Report`.`locationId_count` of type `Int!`
  """
  locationId_count: Int_Filter
  """
  ✨ Generated from Field `Report`.`reason_count` of type `Int!`
  """
  reason_count: Int_Filter
  """
  ✨ Generated from Field `Report`.`userUid_count` of type `Int!`
  """
  userUid_count: Int_Filter
  """
  ✨ Generated from Field `Report`.`createdAt_min` of type `Timestamp`
  """
  createdAt_min: Timestamp_Filter
  """
  ✨ Generated from Field `Report`.`createdAt_max` of type `Timestamp`
  """
  createdAt_max: Timestamp_Filter
}
"""
✨ Generated key input type for table 'Report'. It represents the primary key fields used to uniquely identify a row in the table.
"""
input Report_Key {
  """
  ✨ Generated from Field `Report`.`id` of type `UUID!`
  """
  id: UUID
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `Report`.`id` of type `UUID!`)
  """
  id_expr: UUID_Expr
}
"""
✨ Generated list filter input type for table 'Report'. This input applies filtering logic based on the count or existence of related objects that matches certain criteria.
"""
input Report_ListFilter {
  """
  The desired number of objects that match the condition (defaults to at least one).
  """
  count: Int_Filter = {gt:0}
  """
  Condition of the related objects to filter for.
  """
  exist: Report_Filter
}
"""
✨ Generated order input type for table 'Report'. This input defines the sorting order of rows in query results based on one or more fields.
"""
input Report_Order {
  """
  ✨ Generated from Field `Report`.`id` of type `UUID!`
  """
  id: OrderDirection
  """
  ✨ Generated from Field `Report`.`locationId` of type `UUID!`
  """
  locationId: OrderDirection
  """
  ✨ Generated from Field `Report`.`userUid` of type `String!`
  """
  userUid: OrderDirection
  """
  ✨ Generated from Field `Report`.`location` of type `Location!`
  """
  location: Location_Order
  """
  ✨ Generated from Field `Report`.`user` of type `User!`
  """
  user: User_Order
  """
  ✨ Generated from Field `Report`.`createdAt` of type `Timestamp!`
  """
  createdAt: OrderDirection
  """
  ✨ Generated from Field `Report`.`reason` of type `String!`
  """
  reason: OrderDirection
}
"""
✨ Generated data input type for table 'User'. It includes all necessary fields for creating or upserting rows into table.
"""
input User_Data {
  """
  ✨ Generated from Field `User`.`uid` of type `String!`
  """
  uid: String
  """
  ✨ `_expr` server value variant of `uid` (✨ Generated from Field `User`.`uid` of type `String!`)
  """
  uid_expr: String_Expr
  """
  ✨ Generated from Field `User`.`bio` of type `String`
  """
  bio: String
  """
  ✨ `_expr` server value variant of `bio` (✨ Generated from Field `User`.`bio` of type `String`)
  """
  bio_expr: String_Expr
  """
  ✨ Generated from Field `User`.`createdAt` of type `Timestamp!`
  """
  createdAt: Timestamp
  """
  ✨ `_expr` server value variant of `createdAt` (✨ Generated from Field `User`.`createdAt` of type `Timestamp!`)
  """
  createdAt_expr: Timestamp_Expr
  """
  ✨ `_time` server value variant of `createdAt` (✨ Generated from Field `User`.`createdAt` of type `Timestamp!`)
  """
  createdAt_time: Timestamp_Relative
  """
  ✨ `_update` server value variant of `createdAt` (✨ Generated from Field `User`.`createdAt` of type `Timestamp!`)
  """
  createdAt_update: [Timestamp_Update!]
  """
  ✨ Generated from Field `User`.`displayName` of type `String`
  """
  displayName: String
  """
  ✨ `_expr` server value variant of `displayName` (✨ Generated from Field `User`.`displayName` of type `String`)
  """
  displayName_expr: String_Expr
  """
  ✨ Generated from Field `User`.`email` of type `String`
  """
  email: String
  """
  ✨ `_expr` server value variant of `email` (✨ Generated from Field `User`.`email` of type `String`)
  """
  email_expr: String_Expr
  """
  ✨ Generated from Field `User`.`photoURL` of type `String`
  """
  photoURL: String
  """
  ✨ `_expr` server value variant of `photoURL` (✨ Generated from Field `User`.`photoURL` of type `String`)
  """
  photoURL_expr: String_Expr
}
"""
✨ Generated filter input type for table 'User'. This input allows filtering objects using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input User_Filter {
  """
  Apply multiple filter conditions using `AND` logic.
  """
  _and: [User_Filter!]
  """
  Negate the result of the provided filter condition.
  """
  _not: User_Filter
  """
  Apply multiple filter conditions using `OR` logic.
  """
  _or: [User_Filter!]
  """
  ✨ Generated from Field `User`.`uid` of type `String!`
  """
  uid: String_Filter
  """
  ✨ Generated from Field `User`.`bio` of type `String`
  """
  bio: String_Filter
  """
  ✨ Generated from Field `User`.`createdAt` of type `Timestamp!`
  """
  createdAt: Timestamp_Filter
  """
  ✨ Generated from Field `User`.`displayName` of type `String`
  """
  displayName: String_Filter
  """
  ✨ Generated from Field `User`.`email` of type `String`
  """
  email: String_Filter
  """
  ✨ Generated from Field `User`.`photoURL` of type `String`
  """
  photoURL: String_Filter
  """
  ✨ Generated from Field `User`.`favorites_on_user` of type `[Favorite!]!`
  """
  favorites_on_user: Favorite_ListFilter
  """
  ✨ Generated from Field `User`.`locations_on_creator` of type `[Location!]!`
  """
  locations_on_creator: Location_ListFilter
  """
  ✨ Generated from Field `User`.`ratings_on_user` of type `[Rating!]!`
  """
  ratings_on_user: Rating_ListFilter
  """
  ✨ Generated from Field `User`.`reports_on_user` of type `[Report!]!`
  """
  reports_on_user: Report_ListFilter
}
"""
✨ Generated first-row input type for table 'User'. This input selects the first row matching the filter criteria, ordered according to the specified conditions.
"""
input User_FirstRow {
  """
  Order the result by the specified fields.
  """
  orderBy: [User_Order!]
  """
  Filters rows based on the specified conditions.
  """
  where: User_Filter
}
"""
✨ Generated having input type for table 'User'. This input allows you to filter groups during aggregate queries using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input User_Having {
  """
  Apply multiple Having conditions using `AND` logic.
  """
  _and: [User_Having!]
  """
  Whether to apply DISTINCT to the aggregate function.
  """
  _distinct: Boolean
  """
  Negate the result of the provided Having condition.
  """
  _not: User_Having
  """
  Apply multiple Having conditions using `OR` logic.
  """
  _or: [User_Having!]
  """
  ✨ Generated from Field `User`.`_count` of type `Int!`
  """
  _count: Int_Filter
  """
  ✨ Generated from Field `User`.`bio_count` of type `Int!`
  """
  bio_count: Int_Filter
  """
  ✨ Generated from Field `User`.`createdAt_count` of type `Int!`
  """
  createdAt_count: Int_Filter
  """
  ✨ Generated from Field `User`.`displayName_count` of type `Int!`
  """
  displayName_count: Int_Filter
  """
  ✨ Generated from Field `User`.`email_count` of type `Int!`
  """
  email_count: Int_Filter
  """
  ✨ Generated from Field `User`.`photoURL_count` of type `Int!`
  """
  photoURL_count: Int_Filter
  """
  ✨ Generated from Field `User`.`uid_count` of type `Int!`
  """
  uid_count: Int_Filter
  """
  ✨ Generated from Field `User`.`createdAt_min` of type `Timestamp`
  """
  createdAt_min: Timestamp_Filter
  """
  ✨ Generated from Field `User`.`createdAt_max` of type `Timestamp`
  """
  createdAt_max: Timestamp_Filter
}
"""
✨ Generated key input type for table 'User'. It represents the primary key fields used to uniquely identify a row in the table.
"""
input User_Key {
  """
  ✨ Generated from Field `User`.`uid` of type `String!`
  """
  uid: String
  """
  ✨ `_expr` server value variant of `uid` (✨ Generated from Field `User`.`uid` of type `String!`)
  """
  uid_expr: String_Expr
}
"""
✨ Generated list filter input type for table 'User'. This input applies filtering logic based on the count or existence of related objects that matches certain criteria.
"""
input User_ListFilter {
  """
  The desired number of objects that match the condition (defaults to at least one).
  """
  count: Int_Filter = {gt:0}
  """
  Condition of the related objects to filter for.
  """
  exist: User_Filter
}
"""
✨ Generated order input type for table 'User'. This input defines the sorting order of rows in query results based on one or more fields.
"""
input User_Order {
  """
  ✨ Generated from Field `User`.`uid` of type `String!`
  """
  uid: OrderDirection
  """
  ✨ Generated from Field `User`.`bio` of type `String`
  """
  bio: OrderDirection
  """
  ✨ Generated from Field `User`.`createdAt` of type `Timestamp!`
  """
  createdAt: OrderDirection
  """
  ✨ Generated from Field `User`.`displayName` of type `String`
  """
  displayName: OrderDirection
  """
  ✨ Generated from Field `User`.`email` of type `String`
  """
  email: OrderDirection
  """
  ✨ Generated from Field `User`.`photoURL` of type `String`
  """
  photoURL: OrderDirection
}
